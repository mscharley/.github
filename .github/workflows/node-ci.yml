on:
  workflow_call:
    inputs:
      node-version:
        type: "string"
        required: true
      system-packages:
        type: "string"
        required: false
      cache-key:
        type: "string"
        default: "v1"
      timeout-minutes:
        type: "number"
        default: 15

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      ASDF_NODEJS_AUTO_ENABLE_COREPACK: 'true'
      COREPACK_INTEGRITY_KEYS: '0'

    steps:
      - name: Install system requirements
        if: ${{ inputs.system-packages != '' }}
        run: sudo apt update && sudo apt install ${{ inputs.system-packages }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3.0.2
      - name: Update tool versions with node version
        run: |-
          asdf plugin add nodejs
          INPUT='${{ inputs.node-version }}'
          VERSION=`if [[ "$INPUT" = "current" ]]; then asdf list all nodejs | tail -n 1; else v=(${INPUT//./ }); asdf list all nodejs "${v[0]}" | tail -n 1; fi`
          sed -i -E 's/^nodejs .*/nodejs '"${VERSION}"'/' .tool-versions
          echo '--- Updated tool versions ---'
          cat .tool-versions
      - uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: /home/runner/.asdf
          key: asdf-${{ runner.os }}-${{ inputs.cache-key }}-${{ hashFiles('.tool-versions') }}
      - uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6 # v3.0.2

      - run: pnpm install
      - run: pnpm exec turbo build
        timeout-minutes: ${{ inputs.timeout-minutes }}
      - run: pnpm exec turbo test
        timeout-minutes: ${{ inputs.timeout-minutes }}
